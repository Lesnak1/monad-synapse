# This is a template file for secrets
# In production, these should be created via kubectl or external secret management
apiVersion: v1
kind: Secret
metadata:
  name: monad-synapse-secrets
  labels:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/component: secret
type: Opaque
stringData:
  # Database configuration
  DATABASE_URL: "${DATABASE_URL}"
  DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
  
  # Redis configuration
  REDIS_URL: "${REDIS_URL}"
  REDIS_PASSWORD: "${REDIS_PASSWORD}"
  
  # JWT secrets
  JWT_SECRET: "${JWT_SECRET}"
  JWT_REFRESH_SECRET: "${JWT_REFRESH_SECRET}"
  
  # Blockchain private keys
  WALLET_PRIVATE_KEY: "${WALLET_PRIVATE_KEY}"
  ADMIN_PRIVATE_KEY: "${ADMIN_PRIVATE_KEY}"
  
  # API keys
  MONITORING_API_KEY: "${MONITORING_API_KEY}"
  ANALYTICS_API_KEY: "${ANALYTICS_API_KEY}"
  
  # External service keys
  SLACK_WEBHOOK_URL: "${SLACK_WEBHOOK_URL}"
  SENTRY_DSN: "${SENTRY_DSN}"
  
  # Encryption keys
  ENCRYPTION_KEY: "${ENCRYPTION_KEY}"
  SESSION_SECRET: "${SESSION_SECRET}"
---
# External Secrets Operator configuration (if using ESO)
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: monad-synapse
spec:
  provider:
    vault:
      server: "https://vault.company.com"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "monad-synapse"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: monad-synapse-vault-secrets
  namespace: monad-synapse
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: monad-synapse-secrets
    creationPolicy: Owner
  data:
  - secretKey: DATABASE_URL
    remoteRef:
      key: monad-synapse/database
      property: url
  - secretKey: JWT_SECRET
    remoteRef:
      key: monad-synapse/auth
      property: jwt-secret
  - secretKey: WALLET_PRIVATE_KEY
    remoteRef:
      key: monad-synapse/blockchain
      property: wallet-private-key