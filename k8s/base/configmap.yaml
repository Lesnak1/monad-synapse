apiVersion: v1
kind: ConfigMap
metadata:
  name: monad-synapse-config
  labels:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/component: configmap
data:
  NODE_ENV: "production"
  PORT: "3000"
  NEXT_TELEMETRY_DISABLED: "1"
  # App configuration
  APP_NAME: "Monad Synapse Casino"
  APP_VERSION: "1.0.0"
  
  # Security configuration
  SECURE_HEADERS: "true"
  CSP_ENABLED: "true"
  
  # Performance configuration
  CACHE_TTL: "3600"
  REQUEST_TIMEOUT: "30000"
  
  # Monitoring configuration
  METRICS_ENABLED: "true"
  HEALTH_CHECK_PATH: "/api/health"
  
  # Blockchain configuration
  CHAIN_NAME: "monad"
  NETWORK_ID: "1"
  
  # Rate limiting
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "900000"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=general:10m rate=50r/s;
        
        upstream nextjs {
            server monad-synapse-app:3000;
        }
        
        server {
            listen 80;
            server_name _;
            
            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Rate limiting for API routes
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://nextjs;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_read_timeout 30s;
                proxy_connect_timeout 5s;
            }
            
            # Static files
            location /_next/static/ {
                proxy_pass http://nextjs;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # All other requests
            location / {
                limit_req zone=general burst=100 nodelay;
                proxy_pass http://nextjs;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_read_timeout 30s;
                proxy_connect_timeout 5s;
            }
        }
    }