apiVersion: v1
kind: Service
metadata:
  name: monad-synapse-prod
  namespace: production
  labels:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: service
    environment: production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "${SSL_CERT_ARN}"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    external-dns.alpha.kubernetes.io/hostname: "monad-synapse.com"
    external-dns.alpha.kubernetes.io/ttl: "300"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 80
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: web-app
    version: blue  # This selector will be updated during blue-green deployments
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
---
# Blue Service (Internal)
apiVersion: v1
kind: Service
metadata:
  name: monad-synapse-blue
  namespace: production
  labels:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: blue-service
    environment: production
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  - port: 80
    targetPort: 80
    protocol: TCP
    name: nginx
  selector:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: web-app
    deployment-slot: blue
---
# Green Service (Internal)
apiVersion: v1
kind: Service
metadata:
  name: monad-synapse-green
  namespace: production
  labels:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: green-service
    environment: production
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  - port: 80
    targetPort: 80
    protocol: TCP
    name: nginx
  selector:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: web-app
    deployment-slot: green
---
# Health Check Service
apiVersion: v1
kind: Service
metadata:
  name: monad-synapse-health
  namespace: production
  labels:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: health-service
    environment: production
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 3000
    protocol: TCP
    name: health
  selector:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: web-app
---
# Monitoring Service
apiVersion: v1
kind: Service
metadata:
  name: monad-synapse-metrics
  namespace: production
  labels:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: metrics-service
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/api/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: web-app
---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: monad-synapse-monitoring
  namespace: production
  labels:
    app.kubernetes.io/name: monad-synapse
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: monitoring
    environment: production
    prometheus: kube-prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: monad-synapse
      app.kubernetes.io/component: metrics-service
  endpoints:
  - port: metrics
    path: /api/metrics
    interval: 15s
    scrapeTimeout: 10s
    honorLabels: true
  namespaceSelector:
    matchNames:
    - production