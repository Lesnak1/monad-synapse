# Staging Dockerfile for Monad Synapse Casino Platform
# Includes debugging tools and development features for staging environment

# =============================================================================
# Stage 1: Dependencies
# =============================================================================
FROM node:20-alpine AS deps
LABEL stage=deps

WORKDIR /app

# Install security updates and build tools
RUN apk update && apk upgrade && \
    apk add --no-cache libc6-compat python3 make g++

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev for debugging)
RUN npm ci --ignore-scripts && \
    npm cache clean --force

# =============================================================================
# Stage 2: Build
# =============================================================================
FROM node:20-alpine AS builder
LABEL stage=builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache libc6-compat python3 make g++

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set staging environment for build
ENV NODE_ENV=production
ENV NEXT_PUBLIC_APP_ENV=staging
ENV NEXT_TELEMETRY_DISABLED=1
ENV GENERATE_SOURCEMAP=true

# Build the application with source maps for debugging
RUN npm run build

# =============================================================================
# Stage 3: Staging Runner
# =============================================================================
FROM node:20-alpine AS runner
LABEL stage=runner

WORKDIR /app

# Install debugging and monitoring tools
RUN apk update && apk upgrade && \
    apk add --no-cache \
    dumb-init \
    curl \
    wget \
    ca-certificates \
    htop \
    strace \
    tcpdump \
    netcat-openbsd && \
    rm -rf /var/cache/apk/*

# Install PM2 for process management and monitoring
RUN npm install -g pm2

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Set staging environment
ENV NODE_ENV=production
ENV NEXT_PUBLIC_APP_ENV=staging
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Copy built application
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/package.json ./package.json

# Copy PM2 configuration for staging
COPY --chown=nextjs:nodejs ecosystem.staging.config.js ./ecosystem.config.js

# Set proper permissions
RUN chown -R nextjs:nodejs /app
RUN chmod -R 755 /app

# Switch to non-root user
USER nextjs

# Health check with more verbose logging for staging
HEALTHCHECK --interval=15s --timeout=5s --start-period=30s --retries=5 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Expose port
EXPOSE 3000

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Start with PM2 for better process management in staging
CMD ["pm2-runtime", "start", "ecosystem.config.js", "--env", "staging"]

# =============================================================================
# Image metadata
# =============================================================================
LABEL maintainer="Monad Synapse Team"
LABEL description="Monad Synapse Casino Platform - Staging Image"
LABEL version="1.0.0-staging"
LABEL environment="staging"
LABEL org.opencontainers.image.source="https://github.com/monad-synapse/casino-platform"